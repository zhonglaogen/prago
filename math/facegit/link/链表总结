1. 找出两个链表的交点
1)让长链表和短链表在同一起点(长的长度-短长度,开始遍历)下面都是判断是否有交集
2)A,B两个链表,A访问结束访问B,B方位结束访问A,最后一定会相等
3)让第一个链表的尾部挂上第二个链表的开头,检查是否有环路
4)比较最后一个节点是否相同

2.链表反转
递归反转(重尾到头大反转)
头插法(指针指向当前节点的前一个节点,重头到尾的反转)

3.归并两个有序的链表
递归比较插入(重尾到头的)

4.归并两个有序的链表
递归删除(重尾到头的删除)

5. 删除链表的倒数第 n 个节点
双指针

6. 交换链表中的相邻结点

7. 链表求和
用两个栈存链表,然后相加

8. 回文链表
切成两半，把后半段反转，然后比较两半是否相等。

9. 分隔链表,把链表分隔成 k 部分，每部分的长度都应该尽可能相同，排在前面的长度应该大于等于后面的。
int mod = N % k;
int size = N / k;
int curSize = size + (mod-- > 0 ? 1 : 0);

10. 链表元素按奇偶聚集
分成两条链表分别指向